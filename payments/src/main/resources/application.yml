spring.application.name: payments

spring.kafka.properties.sasl.mechanism: PLAIN
spring.kafka.bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.properties.sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_CLUSTER_API_KEY}' password='${KAFKA_CLUSTER_API_SECRET}';
spring.kafka.properties.security.protocol: SASL_SSL

spring.cloud.function.definition: paymentOrders

spring.cloud.stream.bindings.paymentOrders-in-0.destination: orders.incoming
spring.cloud.stream.bindings.paymentOrders-out-0.destination: app.orders.accepted.account
spring.cloud.stream.bindings.paymentOrders-out-1.destination: app.orders.rejected.account
spring.cloud.stream.bindings.paymentOrders-out-2.destination: app.orders.account
spring.cloud.stream.kafka.streams.binder.functions.paymentOrders.applicationId: paymentOrders


spring.cloud.stream.kafka.streams.binder:
  configuration:
    default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
    default.value.serde: org.springframework.kafka.support.serializer.JsonSerde
    default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
  serdeError: logAndContinue

# Add specific configuration for JsonSerde
spring.cloud.stream.kafka.streams.binder.configuration.spring.json.trusted.packages: com.etask.saga.base.model
spring.cloud.stream.kafka.streams.binder.configuration.spring.json.value.default.type: com.etask.saga.base.model.OrderEvent
spring.cloud.stream.kafka.streams.binder.configuration.spring.json.use.type.headers: false

server.port: 8011

logging.pattern.console: "%clr(%d{HH:mm:ss.SSS}){blue} %clr(---){faint} %clr([%15.15t]){yellow} %clr(:){red} %clr(%m){faint}%n"

management.endpoints.web.exposure.include: health,info
management.endpoint.health.show-details: always
management.endpoint.health.probes.enabled: true

---
spring.config.activate.on-profile: cloud

server.port: 8080

spring:
  r2dbc:
    url: r2dbc:postgresql://${POSTGRESQL_COMMAND_HOST:postgres}:${POSTGRESQL_COMMAND_PORT:5432}/ordersg?serverTimezone=UTC
    username: ${POSTGRESQL_COMMAND_USERNAME:usrdev1}
    password: ${POSTGRESQL_COMMAND_PASSWORD:change_me}
  sql:
    init:
      mode: never